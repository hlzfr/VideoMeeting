<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:aop="http://www.springframework.org/schema/aop"
	xsi:schemaLocation="http://www.springframework.org/schema/beans
    http://www.springframework.org/schema/beans/spring-beans.xsd
	http://www.springframework.org/schema/aop 
	http://www.springframework.org/schema/aop/spring-aop-3.0.xsd">

	<bean id="cacheManagerFactory"
		class="org.springframework.cache.ehcache.EhCacheManagerFactoryBean">
		<property name="configLocation" value="/WEB-INF/ehcache.xml" />
	</bean>
	<!-- 缓存管理器 使用Ehcache实现 -->
	<bean id="cacheManager" class="org.apache.shiro.cache.ehcache.EhCacheManager">
		<!-- <property name="cacheManagerConfigFile" value="classpath:/ehcache.xml" 
			/> -->
		<property name="cacheManager" ref="cacheManagerFactory" />
	</bean>

	<!-- Shiro生命周期处理器 -->
	<bean id="lifecycleBeanPostProcessor" class="org.apache.shiro.spring.LifecycleBeanPostProcessor" />
	<aop:config proxy-target-class="true"></aop:config>

	<!-- 凭证匹配器 -->
	<bean id="credentialsMatcher" class="com.vc.credentials.RetryLimitHashedCredentialsMatcher">
		<constructor-arg ref="cacheManager" />
		<property name="hashAlgorithmName" value="md5" />
		<property name="hashIterations" value="2" />
		<property name="storedCredentialsHexEncoded" value="true" />
	</bean>

	<!-- Realm实现 -->
	<bean id="userRealm" class="com.vc.service.impl.ShiroService">
		<!-- <property name="userService" ref="userService" /> -->
		<property name="cacheManager" ref="cacheManager"></property>
		<property name="credentialsMatcher" ref="credentialsMatcher" />
		<property name="cachingEnabled" value="true" />
		<property name="authenticationCachingEnabled" value="true" />
		<property name="authenticationCacheName" value="shiro.authenticationCache" />
		<property name="authorizationCachingEnabled" value="true" />
		<property name="authorizationCacheName" value="shiro.authorizationCache" />
	</bean>
	<!-- <bean id="userService" class="com.vc.service.impl.UserServiceImpl" 
		> <property name="userDao" ref="baseDao" /> </bean> <bean id="baseDao" class="com.vc.dao.impl.BaseDAOImpl"> 
		<property name="SessionFactory" ref="sessionFactory" /> </bean> -->

	<!-- 会话ID生成器 -->
	<bean id="sessionIdGenerator"
		class="org.apache.shiro.session.mgt.eis.JavaUuidSessionIdGenerator" />
	<!-- 会话DAO -->
	<bean id="sessionDAO" class="org.apache.shiro.session.mgt.eis.EnterpriseCacheSessionDAO">
		<property name="sessionIdGenerator" ref="sessionIdGenerator" />
		<property name="activeSessionsCacheName" value="shiro-activeSessionCache" />
	</bean>
	<!-- 会话验证调度器 -->
	<bean id="sessionValidationScheduler"
		class="org.apache.shiro.session.mgt.quartz.QuartzSessionValidationScheduler">
		<property name="sessionValidationInterval" value="180000000" />
		<property name="sessionManager" ref="sessionManager" />
	</bean>
	<!-- 会话管理器 -->
	<!-- <bean id="sessionManager" class="org.apache.shiro.session.mgt.DefaultSessionManager"> -->
	<bean id="sessionManager" class="org.apache.shiro.web.session.mgt.DefaultWebSessionManager">
		<property name="globalSessionTimeout" value="18000000" />
		<property name="deleteInvalidSessions" value="false" />
		<property name="sessionValidationSchedulerEnabled" value="true" />
		<property name="sessionValidationScheduler" ref="sessionValidationScheduler" />
		<property name="sessionDAO" ref="sessionDAO" />
	</bean>
	<!-- 安全管理器 -->
	<!-- <bean id="securityManager" class="org.apache.shiro.mgt.DefaultSecurityManager"> -->
		<bean id="securityManager" class="org.apache.shiro.web.mgt.DefaultWebSecurityManager">
		<property name="realms">
			<list>
				<ref bean="userRealm" />
			</list>
		</property>
		<property name="sessionManager" ref="sessionManager" />
		<property name="cacheManager" ref="cacheManager" />
		<!-- <property name="subjectDAO" ref="subjectDAO"></property>
		<property name="subjectFactory" ref="subjectFactory"></property> -->
		<property name="rememberMeManager" ref="rememberMeManager" />
	</bean>
	<bean id="rememberMeManager" class="org.apache.shiro.web.mgt.CookieRememberMeManager">
		<property name="cookie" ref="rememberCookie"></property>
	</bean>
	<bean id="rememberCookie" class="org.apache.shiro.web.servlet.SimpleCookie" >
		<constructor-arg value="rememberMe"  />
		<!-- rememberMe生效30天 -->
		<property name="maxAge" value="2592000" /> 
	</bean>
	<bean id="subjectDAO" class="org.apache.shiro.mgt.DefaultSubjectDAO" />
	<bean id="subjectFactory" class="org.apache.shiro.mgt.DefaultSubjectFactory" />
	<!-- 相当于调用SecurityUtils.setSecurityManager(securityManager) -->
	<bean
		class="org.springframework.beans.factory.config.MethodInvokingFactoryBean">
		<property name="staticMethod"
			value="org.apache.shiro.SecurityUtils.setSecurityManager" />
		<property name="arguments" ref="securityManager" />
	</bean>

	<bean
		class="org.apache.shiro.spring.security.interceptor.AuthorizationAttributeSourceAdvisor">
		<property name="securityManager" ref="securityManager" />
	</bean>

	<!-- 开启Shiro注解的Spring配置方式的beans。在lifecycleBeanPostProcessor之后运行 -->
	<bean
		class="org.springframework.aop.framework.autoproxy.DefaultAdvisorAutoProxyCreator"
		depends-on="lifecycleBeanPostProcessor">
		<property name="proxyTargetClass" value="true" />
	</bean>

	<bean
		class="org.apache.shiro.spring.security.interceptor.AuthorizationAttributeSourceAdvisor">
		<property name="securityManager" ref="securityManager" />
	</bean>

	<bean
		class="org.springframework.web.servlet.handler.SimpleMappingExceptionResolver">
		<property name="exceptionMappings">
			<props>
				<!-- 登录 -->
				<prop key="org.apache.shiro.authz.UnauthenticatedException">
					redirect:/user/test3
				</prop>
				<!-- 授权 -->
				<prop key="org.apache.shiro.authz.UnauthorizedException">
					redirect:/user/test3
				</prop>
			</props>
		</property>
		<!-- <property name="defaultErrorView" value="error/genericView" /> -->
	</bean>
	
	<aop:config proxy-target-class="true"></aop:config>
	
	<bean
		class="org.apache.shiro.spring.security.interceptor.AuthorizationAttributeSourceAdvisor">
		<property name="securityManager" ref="securityManager" />
	</bean>

	<!-- 基于Form表单的身份验证过滤器 -->
	<bean id="formAuthenticationFilter"
		class="org.apache.shiro.web.filter.authc.FormAuthenticationFilter">
		<property name="usernameParam" value="username" />
		<property name="passwordParam" value="password" />
		<property name="loginUrl" value="/login.jsp" />
	</bean>
	
	<!-- Shiro的Web过滤器 -->
	<bean id="shiroFilter" class="org.apache.shiro.spring.web.ShiroFilterFactoryBean">
		<property name="securityManager" ref="securityManager" />
		<property name="loginUrl" value="/login.jsp" />
		<property name="unauthorizedUrl" value="/unauthorized.jsp" />
		<property name="filterChainDefinitions">
			<value>
			</value>
		</property>
	</bean>
</beans>